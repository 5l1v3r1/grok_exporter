diff -Naur rubex_orig/chelper.c rubex_patched/chelper.c
--- rubex_orig/chelper.c	2016-05-27 08:56:28.000000000 +0200
+++ rubex_patched/chelper.c	2016-05-10 22:52:59.000000000 +0200
@@ -7,7 +7,7 @@
 #include "chelper.h"
 
 int NewOnigRegex( char *pattern, int pattern_length, int option,
-                  OnigRegex *regex, OnigRegion **region, OnigErrorInfo **error_info, char **error_buffer) {
+                  OnigRegex *regex, OnigRegion **region, OnigEncoding *encoding, OnigErrorInfo **error_info, char **error_buffer) {
     int ret = ONIG_NORMAL;
     int error_msg_len = 0;
 
@@ -17,13 +17,15 @@
     *error_info = (OnigErrorInfo *) malloc(sizeof(OnigErrorInfo));
     memset(*error_info, 0, sizeof(OnigErrorInfo));
 
+    *encoding = (void*)ONIG_ENCODING_UTF8;
+
     *error_buffer = (char*) malloc(ONIG_MAX_ERROR_MESSAGE_LEN * sizeof(char));
 
     memset(*error_buffer, 0, ONIG_MAX_ERROR_MESSAGE_LEN * sizeof(char));
 
     *region = onig_region_new();
 
-    ret = onig_new_default(regex, pattern_start, pattern_end, (OnigOptionType)(option), *error_info);
+    ret = onig_new(regex, pattern_start, pattern_end, (OnigOptionType)(option), *encoding, OnigDefaultSyntax, *error_info);
   
     if (ret != ONIG_NORMAL) {
         error_msg_len = onig_error_code_to_str((unsigned char*)(*error_buffer), ret, *error_info);
diff -Naur rubex_orig/chelper.h rubex_patched/chelper.h
--- rubex_orig/chelper.h	2016-05-27 08:56:28.000000000 +0200
+++ rubex_patched/chelper.h	2016-05-10 22:52:59.000000000 +0200
@@ -1,7 +1,7 @@
 #include <oniguruma.h>
 
 extern int NewOnigRegex( char *pattern, int pattern_length, int option,
-                                  OnigRegex *regex, OnigRegion **region, OnigErrorInfo **error_info, char **error_buffer);
+                                  OnigRegex *regex, OnigRegion **region, OnigEncoding *encoding, OnigErrorInfo **error_info, char **error_buffer);
 
 extern int SearchOnigRegex( void *str, int str_length, int offset, int option,
                                   OnigRegex regex, OnigRegion *region, OnigErrorInfo *error_info, char *error_buffer, int *captures, int *numCaptures);
diff -Naur rubex_orig/regex.go rubex_patched/regex.go
--- rubex_orig/regex.go	2016-05-27 08:56:28.000000000 +0200
+++ rubex_patched/regex.go	2016-05-14 22:21:16.000000000 +0200
@@ -1,8 +1,8 @@
 package rubex
 
 /*
-#cgo CFLAGS: -I${SRCDIR}/../../../../../clibs/include
-#cgo LDFLAGS: -L${SRCDIR}/../../../../../clibs/lib -lonig
+#cgo CFLAGS: -I/usr/local/include
+#cgo LDFLAGS: -L/usr/local/lib -lonig
 #include <stdlib.h>
 #include <oniguruma.h>
 #include "chelper.h"
@@ -15,7 +15,7 @@
 	"fmt"
 	"io"
 	"log"
-	//"runtime"
+	"runtime"
 	"strconv"
 	"sync"
 	"unicode/utf8"
@@ -40,6 +40,7 @@
 	pattern        string
 	regex          C.OnigRegex
 	region         *C.OnigRegion
+	encoding       C.OnigEncoding
 	errorInfo      *C.OnigErrorInfo
 	errorBuf       *C.char
 	matchData      *MatchData
@@ -53,7 +54,7 @@
 
 	mutex.Lock()
 	defer mutex.Unlock()
-	error_code := C.NewOnigRegex(patternCharPtr, C.int(len(pattern)), C.int(option), &re.regex, &re.region, &re.errorInfo, &re.errorBuf)
+	error_code := C.NewOnigRegex(patternCharPtr, C.int(len(pattern)), C.int(option), &re.regex, &re.region, &re.encoding, &re.errorInfo, &re.errorBuf)
 	if error_code != C.ONIG_NORMAL {
 		err = errors.New(C.GoString(re.errorBuf))
 	} else {
@@ -65,7 +66,7 @@
 			re.matchData.indexes[i] = make([]int32, numCapturesInPattern*2)
 		}
 		re.namedGroupInfo = re.getNamedGroupInfo()
-		//runtime.SetFinalizer(re, (*Regexp).Free)
+		runtime.SetFinalizer(re, (*Regexp).Free)
 	}
 	return re, err
 }
